names(inputs)
inputs$e
inputs$e0
inputs
inputs$e0M
inputs$e0M.
inputs$e0M.s
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
pop.predict( end.year=2100, start.year=1950, present.year=2005, nr.traj=1000, output.dir='/Users/hana/bayespop/R/Pop/test_Morocco_csv', verbose=FALSE, replace.output=TRUE, countries=504 , inputs = list( tfr.file='/Users/hana/bayespop/R/TFR/3x62000_thin20/predictions/ascii_trajectories.csv', e0M.sim.dir='/Users/hana/bayespop/R/LE/3x100TM', e0F.sim.dir='/Users/hana/bayespop/R/LE/3x100TF' ))
load('last.dump.rda'); debugger()
colnames(TFRpred)
help(read.delim)
TFRpred <- read.csv(file=inputs$tfr.file, comment.char='#', check.names=FALSE)
colnames(TFRpred)
TFRpred <- TFRpred[,c('LocID', 'Year', 'TF')]
library(bigmemory)
help(bigmemory)
detach(package:bayesPop, unload=TRUE)
library(bigmemory)
pop.predict( end.year=2100, start.year=1950, present.year=2005, nr.traj=1000, output.dir='/Users/hana/bayespop/R/Pop/test_Morocco_csv', verbose=FALSE, replace.output=TRUE, countries=504 , inputs = list( tfr.file='/Users/hana/bayespop/R/TFR/3x62000_thin20/predictions/ascii_trajectories.csv', e0M.sim.dir='/Users/hana/bayespop/R/LE/3x100TM', e0F.sim.dir='/Users/hana/bayespop/R/LE/3x100TF' ))
library(bigmemory)
library(bayesPop)
pop.predict( end.year=2100, start.year=1950, present.year=2005, nr.traj=1000, output.dir='/Users/hana/bayespop/R/Pop/test_Morocco_csv', verbose=FALSE, replace.output=TRUE, countries=504 , inputs = list( tfr.file='/Users/hana/bayespop/R/TFR/3x62000_thin20/predictions/ascii_trajectories.csv', e0M.sim.dir='/Users/hana/bayespop/R/LE/3x100TM', e0F.sim.dir='/Users/hana/bayespop/R/LE/3x100TF' ))
load('last.dump.rda'); debugger()
par
dim(inpc[[par]])
inpc[[par]] <- inputs[[par]][idx,]
dim(inpc[[par]])
inpc[[par]] <- matrix(inpc[[par]][, 'value'], nrow=length(inputs$proj.years))
dim(inpc[[par]])
rownames(inpc[[par]]) <- as.character(inputs$proj.years)
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
pop.predict( end.year=2100, start.year=1950, present.year=2005, nr.traj=1000, output.dir='/Users/hana/bayespop/R/Pop/test_Morocco_csv', verbose=FALSE, replace.output=TRUE, countries=504 , inputs = list( tfr.file='/Users/hana/bayespop/R/TFR/3x62000_thin20/predictions/ascii_trajectories.csv', e0M.sim.dir='/Users/hana/bayespop/R/LE/3x100TM', e0F.sim.dir='/Users/hana/bayespop/R/LE/3x100TF' ))
pred <- get.pop.prediction('/Users/hana/bayespop/R/Pop/test_Morocco_csv')#
pop.trajectories.plot(pred, 'Morocco')
predC <- get.pop.prediction('/Users/hana/bayespop/R/Pop/testC_Morocco')#
pop.trajectories.plot(predC, 'Morocco')
.libPaths('/Users/hana/src/R/lib')
library(bayesPop)
Rprof('RprofC2.out', memory.profiling=TRUE); #
pop.predict( end.year=2100, start.year=1950, wpp.year=2010, present.year=2010, nr.traj=1000, output.dir='/Users/hana/bayespop/R/Pop/testC2_Morocco', verbose=FALSE, replace.output=TRUE, countries=504 , inputs = list( tfr.sim.dir='/Users/hana/bayespop/R/TFR/3x62000_thin20', e0M.sim.dir='/Users/hana/bayespop/R/LE/3x100TM', e0F.sim.dir='/Users/hana/bayespop/R/LE/3x100TF' )); Rprof(NULL)
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
Rprof('RprofC2.out', memory.profiling=TRUE); #
pop.predict( end.year=2100, start.year=1950, wpp.year=2010, present.year=2010, nr.traj=1000, output.dir='/Users/hana/bayespop/R/Pop/testC2_Morocco', verbose=FALSE, replace.output=TRUE, countries=504 , inputs = list( tfr.sim.dir='/Users/hana/bayespop/R/TFR/3x62000_thin20', e0M.sim.dir='/Users/hana/bayespop/R/LE/3x100TM', e0F.sim.dir='/Users/hana/bayespop/R/LE/3x100TF' )); Rprof(NULL)
predC <- get.pop.prediction('/Users/hana/bayespop/R/Pop/testC2_Morocco')#
pop.trajectories.plot(predC, 'Morocco')
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
Rprof('RprofC2.out', memory.profiling=TRUE); #
pop.predict( end.year=2100, start.year=1950, wpp.year=2010, present.year=2010, nr.traj=1000, output.dir='/Users/hana/bayespop/R/Pop/testC2_Morocco', verbose=FALSE, replace.output=TRUE, countries=504 , inputs = list( tfr.sim.dir='/Users/hana/bayespop/R/TFR/3x62000_thin20', e0M.sim.dir='/Users/hana/bayespop/R/LE/3x100TM', e0F.sim.dir='/Users/hana/bayespop/R/LE/3x100TF' )); Rprof(NULL)
predC <- get.pop.prediction('/Users/hana/bayespop/R/Pop/testC2_Morocco')#
pop.trajectories.plot(predC, 'Morocco')
.libPaths('/Users/hana/src/R/lib')
library(bayesPop)
Rprof('RprofC2.out', memory.profiling=TRUE); #
pop.predict( end.year=2100, start.year=1950, wpp.year=2010, present.year=2010, nr.traj=1000, output.dir='/Users/hana/bayespop/R/Pop/testC2_Morocco', verbose=FALSE, replace.output=TRUE, countries=504 , inputs = list( tfr.sim.dir='/Users/hana/bayespop/R/TFR/3x62000_thin20', e0M.sim.dir='/Users/hana/bayespop/R/LE/3x100TM', e0F.sim.dir='/Users/hana/bayespop/R/LE/3x100TF' )); Rprof(NULL)
.libPaths('/Users/hana/src/R/lib')
library(bayesPop)
pred <- get.pop.prediction('/Users/hana/bayespop/R/Pop/wpp2010')
summary(pred)
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
summary(pred)
options(error=quote(dump.frames("last.dump", TRUE)))
summary(pred)
load('last.dump.rda'); debugger()
object$end.year
names(object)
object$proj.years
detach(package:bayesTFR, unload=TRUE)
detach(package:bayesPop, unload=TRUE)
detach(package:bayesTFR, unload=TRUE)
detach(package:bayesLife, unload=TRUE)
detach(package:bayesTFR, unload=TRUE)
library(bayesPop)
summary(pred)
detach(package:bayesPop, unload=TRUE)
detach(package:bayesLife, unload=TRUE)
detach(package:bayesTFR, unload=TRUE)
library(bayesPop)
summary(pred)
summary(pred, country='Germany')
summary(pred, country='Germany', compact=FALSE)
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
summary(pred)
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
summary(pred)
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
summary(pred)
summary(pred, country="Ukraine")
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
summary(pred, country="Ukraine")
summary(pred, country="Ukraine", compact=F)
summary(pred, country="Ukraine", compact=F, digit=5)
summary(pred, country="Ukraine", compact=F, digits=4)
summary(pred, country="Ukraine", compact=F, digits=3)
summary(pred, country="Ukraine", compact=F, digits=2)
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
summary(pred, country="Ukraine")
summary(pred, country="Germany")
summary(pred, country="United States of America")
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
summary(pred, country="United States of America")
summary(pred, country="United States of America", sex='male')
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
summary(pred, country="United States of America", sex='male')
summary(pred, country="United States of America")
summary(pred, country="United States of America", sex=1)
summary(pred, country="United States of America", sex='female')
help(with)
help(ddply)
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
pop.trajectories.plot(pred, 'Germany', nr.traj=20)
pop.trajectories.plot(pred, 'Germany', nr.traj=20, sum.over.ages=TRUE)
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
pop.trajectories.plot(pred, 'Germany', nr.traj=20, sum.over.ages=TRUE)
load('last.dump.rda'); debugger()
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
pop.trajectories.plot(pred, 'Germany', nr.traj=20, sum.over.ages=TRUE)
load('last.dump.rda'); debugger()
library(ggplot2)
plot.data <- data.frame(time=x)
dim(trajectories$trajectories)
trajectories$trajectories[,trajectories$index]
rep(x,2)
plot.data <- data.frame(time=rep(x, length(trajectories$index)), pop=as.numeric(trajectories$trajectories[,trajectories$index]))
dim(plot.data)
matrix(1:6, 2,3)
matrix(1:6, 2,3, byrow=T)
matrix(1:3, 2,3, byrow=T)
plot.data <- data.frame(time=rep(x, length(trajectories$index)), pop=as.numeric(trajectories$trajectories[,trajectories$index]),#
							trajectory=as.numeric(matrix(1:length(trajectories$index), ncol=length(trajectories$index), byrow=TRUE)))
plot.data
a<- matrix(1:length(trajectories$index), ncol=length(trajectories$index), byrow=TRUE)
a
a<- matrix(1:length(trajectories$index), ncol=length(trajectories$index), nrow=nrow(trajectories$trajectories),byrow=TRUE)
a
plot.data <- data.frame(time=rep(x, length(trajectories$index)), pop=as.numeric(trajectories$trajectories[,trajectories$index]),#
							trajectory=as.numeric(matrix(1:length(trajectories$index), nrow=nrow(trajectories$trajectories), ncol=length(trajectories$index), byrow=TRUE)))
plot.data
p <- ggplot(plot.data, aes(time, pop, group=trajectory)) + geom_line()
p
p <- ggplot(plot.data, aes(time, pop, group=trajectory, color='gray')) + geom_line()
p
p <- ggplot(plot.data, aes(time, pop, group=trajectory, color=I('gray')) + geom_line()
)
p <- ggplot(plot.data, aes(time, pop, group=trajectory)) + geom_line(color='gray')
p
pop.median <- get.pop.traj.quantiles(trajectories$quantiles, pop.pred, country$index, country$code, #
										trajectories=trajectories$trajectories, q=0.5, sex=sex, age=age)
qdata <- data.frame(median=pop.median)
p <- ggplot(plot.data, aes(time, pop, group=trajectory)) + geom_line(color='gray') + geom_line(aes(data=qdata), y=median, color='red')
p
p <- ggplot(plot.data, aes(time, pop, group=trajectory)) + geom_line(color='gray')
p
qdata
geom_line(aes(data=qdata), y=median, color='red')
p + geom_line(aes(data=qdata), y=median, color='red')
p + geom_line(data=qdata, y=median, color='red')
p + geom_line(data=qdata, y=median, color='red', group=1)
p + geom_line(aes(group=1), data=qdata, y=median, color='red')
qdata <- data.frame(median=pop.median, time=x)
p + geom_line(aes(group=1), data=qdata, y=median, color='red')
qdata
p + geom_line(aes(group=1), data=qdata, x=time, y=median, color='red')
geom_line(aes(group=1), data=qdata, x=time, y=median, color='red')
p <- ggplot(plot.data, aes(time, pop, group=trajectory)) + geom_line(color='gray')
p
geom_line(aes(group=1), data=qdata, x=time, y=median, color='red')
p + geom_line(aes(group=1), data=qdata, x=time, y=median, color='red')
p+geom_smooth()
p+geom_smooth(aes(group=1))
p %+% qdata + geom_line(aes(group=1), data=qdata, x=time, y=median, color='red')
p %+% qdata + geom_line(aes(group=1, x=time, y=median), data=qdata,  color='red')
p
p %+% qdata + geom_line(aes(group=1, x=time, y=median), data=qdata,  color='red')
qdata <- data.frame(pop=pop.median, time=x)
p %+% qdata + geom_line(aes(group=1), data=qdata,  color='red')
p %+% qdata + geom_line(aes(time, pop, group=1), data=qdata,  color='red')
qdata <- data.frame(pop=pop.median, time=x, trajectory=rep(1, length(x)))
p %+% qdata + geom_line(aes(time, pop, group=1), data=qdata,  color='red')
p + geom_line(aes(time, pop, group=1), data=qdata,  color='red')
qdata <- data.frame(pop=pop.median, time=x)
p + geom_line(aes(time, pop, group=1), data=qdata,  color='red')
help(bayesPop)
help(bayesLife)
pred$countries
is.character('rtyre')
is.character(4)
is.character(4, '55', 6, 'asd')
is.character(c(4, '55', 6, 'asd'))
help(is.character)
is.integer(4, '55', 6, 'asd')
is.integer(c(4, '55', 6, 'asd'))
sapply(c(4, '55', 6, 'asd'), is.character)
c(4, '55', 6, 'asd')
is.character(c(4, 55, 6))
file.show(file.path(R.home("doc"), "KEYWORDS"))
.libPaths('/Users/hana/src/R/lib')
library(bayesPop)
source('run_tests.R')
sim.dir <- tempfile()#
# Generates population projection for one country#
pred <- pop.predict(countries='Ireland', nr.traj=10, output.dir=sim.dir)
options(error=quote(dump.frames("last.dump", TRUE)))
pred <- pop.predict(countries='Ireland', nr.traj=10, output.dir=sim.dir)
file.path(.find.package("bayesPop"), "ex-data", 'LEm')
lem <- get.e0.prediction(file.path(.find.package("bayesPop"), "ex-data", 'LEm'))
summary(lem)
summary(lem, Ireland)
summary(lem, 'Ireland')
names(lem)
lem <- get.e0.prediction(file.path(.find.package("bayesPop"), "ex-data", 'LEm'), mcmc.dir=NA)
summary(lem, 'Ireland')
names(lem)
detach(package:bayesDem, unload=TRUE)
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
sim.dir <- tempfile()#
# Generates population projection for one country#
country <- 'Ireland'#
pred <- pop.predict(countries=country, nr.traj=10, output.dir=sim.dir)
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
unlink(sim.dir)
sim.dir <- tempfile()#
# Generates population projection for one country#
country <- 'Ireland'#
pred <- pop.predict(countries=country, nr.traj=10, output.dir=sim.dir)
detach(package:bayesPop, unload=TRUE)
unlink(sim.dir)
library(bayesPop)
sim.dir <- tempfile()#
# Generates population projection for one country#
country <- 'Ireland'#
pred <- pop.predict(countries=country, nr.traj=10, output.dir=sim.dir)
summary(pred, country)
pop.trajectories.plot(pred, country)
pop.pyramid(pred, country)
pop.pyramid(pred, country, year=2100)
pop.pyramid(pred, country)
pop.pyramid(pred, country, year=2100, ages=1:25)
pop.pyramid(pred, country)
pop.pyramid(pred, country, year=2100, ages=1:26)
unlink(sim.dir, recursive=TRUE)
pop.trajectories.pyramid(pred, country, year=2100, ages=1:26)
detach(package:bayesPop, unload=TRUE)
library(bayesPop)
prompt(pop.trajectories.plot)
getwd()
help(tfr.trajectories.plot)
seq(0, length=27, by=5)
help(tfr.partraces.plot)
help(tfr.trajectories.plot)
file.show(file.path(R.home("doc"), "KEYWORDS"))
prompt('pop.pyramid')
prompt(pop.pyramid)
sim.dir <- file.path(.find.package("bayesPop"), "ex-data", 'Pop')#
pred <- get.pop.prediction(sim.dir)#
pop.pyramid(pred, 'India', 2045)
pop.trajectories.pyramid(pred, 'India', 2045, age=1:25)
